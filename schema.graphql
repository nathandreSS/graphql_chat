schema {
  query: Query
  mutation: Mutation
  subscription: Subscription
}

type User {
    username: String
    userId: String
}

type Group {
    groupId: String!
    name: String!
    usersIds: [String!]!
}

type Message {
    content: String
    senderId: String
    recipientId: String
    groupId: String
}

type createUserResult {
    user: User
    success: Boolean!
    errors: [String]
}

type createMessageResult {
    message: Message
    success: Boolean!
    errors: [String]
}

type createGroupResult {
    group: Group
    success: Boolean!
    errors: [String]
}

type addUsersToGroupResult {
    group: Group
    success: Boolean!
    errors: [String]
}

type messagesResult {
    messages: [Message]
    success: Boolean!
    errors: [String]
}

type Query {
    messages(userId: String!): messagesResult
    userId(username: String!): String
}

type Mutation {
    createUser(username: String!): createUserResult
    createGroup(name: String!, usersIds: [String!]!): createGroupResult 
    addUsersToGroup(groupId: String!, usersIds: [String!]!): addUsersToGroupResult
    createMessage(senderId: String, recipientId: String, content: String ): createMessageResult
    createGroupMessage(senderId: String, groupId: String, content: String ): createMessageResult
    
}

type Subscription {
    messages(userId: String): Message
}

